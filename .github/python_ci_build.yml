# .github/workflows/python_ci_build.yml

name: Python CI, Coverage Check, and Build EXE

# Controls when the workflow will run
on:
  push:
    branches: [ main ] # Or your default branch
  pull_request:
    branches: [ main ] # Or your default branch

jobs:
  test-and-build:
    # We use windows-latest because PyInstaller needs to build the .exe on Windows
    runs-on: windows-latest

    strategy:
      matrix:
        # Run for a specific Python version
        python-version: ["3.11"] # Choose a version you use, e.g., 3.11, 3.12

    steps:
      # --- Setup ---
      - name: Check out repository code
        uses: actions/checkout@v4 # Updated to v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5 # Updated to v5
        with:
          python-version: ${{ matrix.python-version }}
          # Optional: Cache pip dependencies
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install coverage pyinstaller
        shell: pwsh # Use PowerShell on Windows runner

      # --- Testing ---
      - name: Run tests with coverage
        run: |
          coverage run -m unittest test_simple_game.py
        shell: pwsh

      - name: Check coverage report (fail if below 75%)
        run: |
          coverage report --fail-under=75
        shell: pwsh

      # --- Building EXE (only if tests pass) ---
      - name: Build Windows executable with PyInstaller
        # This step runs only if previous steps (tests & coverage check) succeed
        run: |
          pyinstaller --onefile --name SimpleChoiceGame simple_game.py
        shell: pwsh

      # --- Upload Artifact ---
      - name: Upload executable artifact
        uses: actions/upload-artifact@v4 # Updated to v4
        with:
          name: SimpleChoiceGame-Windows-EXE # Name of the artifact zip file
          path: dist/SimpleChoiceGame.exe # Path to the file to upload