# .github/workflows/release.yml

name: Create GitHub Release

# Trigger this workflow when a tag starting with 'v' is pushed
on:
  push:
    tags:
      - 'v*' # Matches v1.0, v2.3.4, etc.

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
        shell: pwsh

      - name: Install test dependencies
        run: pip install coverage
        shell: pwsh
      - name: Run tests with coverage
        run: coverage run -m unittest test_simple_game.py
        shell: pwsh
      - name: Check coverage report
        run: coverage report --fail-under=75
        shell: pwsh

      - name: Build Windows executable with PyInstaller
        run: |
          pyinstaller --onefile --name SimpleChoiceGame simple_game.py
        shell: pwsh

      - name: Create Release Notes (Optional - basic example)
        # Creates a temporary file with release notes.
        run: |
          echo "Release based on tag ${{ github.ref_name }}" > RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "Assets include:" >> RELEASE_NOTES.md
          echo "- Windows Executable (SimpleChoiceGame-windows.exe)" >> RELEASE_NOTES.md
        shell: pwsh

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }} 
          release_name: Release ${{ github.ref_name }} 
          body_path: RELEASE_NOTES.md 
          draft: false 
          prerelease: false 

      - name: Upload Release Asset (Windows EXE)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./dist/SimpleChoiceGame.exe 
          asset_name: SimpleChoiceGame-windows.exe 
          asset_content_type: application/vnd.microsoft.portable-executable 